#===============================
#= DATA SOURCE
#===============================

# Set here configurations for the database connection

spring.datasource.url=jdbc:postgresql://172.21.22.133:15432/carioke?currentSchema=catalogo
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Keep the connection alive if idle for a long time (needed in production)

#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1

#===============================
#= JPA / HIBERNATE
#===============================
# Show or not log for each sql query

spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application

spring.jpa.hibernate.ddl-auto=update

# Naming strategy

#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.format_sql=true


#===============================
#= SECURITY
#===============================

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8180/realms/cariokedev/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/cariokedev

management.endpoint.health.probes.enabled=true
management.health.readinessstate.enabled=true
management.health.livenessstate.enabled=true
management.endpoints.web.exposure.include=*
spring.lifecycle.timeout-per-shutdown-phase=30s

logging.level.org.springframework.security.web.csrf=DEBUG

spring.security.oauth2.client.registration.google.client-id=422068459587-7e6i7f2mqvhf21bq4fr25pp22otjonhr.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email,https://accounts.google.com/o/oauth2/auth
